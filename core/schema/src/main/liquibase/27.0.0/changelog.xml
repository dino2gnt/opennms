<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd" >

    <changeSet runOnChange="false" author="cpape" id="27.0.0-remove-remote-poller">
        <sql>
            DELETE FROM monitoringsystems WHERE type='Remote Poller';
        </sql>

        <dropTable tableName="location_specific_status_changes"/>
    </changeSet>

    <changeSet runOnChange="false" author="cpape" id="27.0.0-add-perspective-to-outage-table">
        <addColumn tableName="outages">
            <column name="perspective" type="text"/>
        </addColumn>
        <addForeignKeyConstraint baseTableName="outages" baseColumnNames="perspective" constraintName="fk_outages_perspective" referencedTableName="monitoringlocations" referencedColumnNames="id" onDelete="CASCADE" onUpdate="CASCADE"/>
    </changeSet>

    <changeSet author="cpape" id="27.0.0-unique-outages-per-location">
        <dropIndex tableName="outages" indexName="one_outstanding_outage_per_service_idx"/>
        <sql>
            CREATE UNIQUE INDEX one_outstanding_outage_per_service_and_location_idx1
              ON outages (ifserviceid)
              WHERE perspective IS NULL AND ifregainedservice IS NULL;

            CREATE UNIQUE INDEX one_outstanding_outage_per_service_and_location_idx2
              ON outages (ifserviceid, perspective)
              WHERE NOT perspective IS NULL AND ifregainedservice IS NULL;
        </sql>
    </changeSet>

    <changeSet author="cpape" id="27.0.0-recreate-views-based-on-outage-table">
        <dropView viewName="node_outages"/>
        <dropView viewName="node_outage_status"/>

        <createView replaceIfExists="true" viewName="node_outage_status">
          SELECT
            node.nodeid,
            (CASE WHEN severity IS NULL OR severity &lt; 3 THEN 3 ELSE severity END) AS max_outage_severity
          FROM
            (
              SELECT events.nodeid, max(events.eventseverity) AS severity
              FROM events
              JOIN outages ON outages.svclosteventid = events.eventid
              WHERE outages.ifregainedservice IS NULL AND outages.perspective IS NULL
              GROUP BY events.nodeid
            ) AS tmp
          RIGHT JOIN node ON tmp.nodeid = node.nodeid
        </createView>

        <createView replaceIfExists="true" viewName="node_outages">
            SELECT
              outages.outageid,
              outages.svclosteventid,
              outages.svcregainedeventid,
              outages.iflostservice,
              outages.ifregainedservice,
              outages.ifserviceid,
              e.eventuei AS svclosteventuei,
              e.eventsource,
              e.alarmid,
              e.eventseverity,
              (ifregainedservice NOTNULL) AS resolved,
              s.servicename,
              i.serviceid,
              ipif.ipaddr,
              COALESCE(outages.ifregainedservice - outages.iflostservice, now() - outages.iflostservice) AS duration,
              nos.max_outage_severity,
              nc.*
            FROM
              outages
            JOIN
              events e
            ON
              outages.svclosteventid = e.eventid
            JOIN
              ifservices i
            ON
              outages.ifserviceid = i.id
            JOIN
              service s
            ON
              i.serviceid = s.serviceid
            JOIN
              ipinterface ipif
            ON
              i.ipinterfaceid = ipif.id
            JOIN
              node_categories nc
            ON
              nc.nodeid = e.nodeid
            JOIN
              node_outage_status nos
            ON
              nc.nodeid = nos.nodeid
            WHERE
              outages.perspective IS NULL
        </createView>
    </changeSet>

    <changeSet author="patrick.schweizer" id="27.0.0-perspective-poller-tables">
        <createTable tableName="application_perspective_location_map" remarks="locations from where an application should be monitored">
            <column name="appid" type="integer">
                <constraints nullable="false" />
            </column>
            <column name="monitoringlocationid" type="text">
                <constraints nullable="false" />
            </column>
        </createTable>
        <addForeignKeyConstraint constraintName="appid_fkey"
                                 baseTableName="application_perspective_location_map" baseColumnNames="appid"
                                 referencedTableName="applications" referencedColumnNames="id" onDelete="CASCADE"/>
        <addForeignKeyConstraint constraintName="monitoringLocationid_fkey"
                                 baseTableName="application_perspective_location_map" baseColumnNames="monitoringlocationid"
                                 referencedTableName="monitoringlocations" referencedColumnNames="id" onDelete="CASCADE"/>
        <createIndex tableName="application_perspective_location_map" indexName="application_perspective_location_map_appid_idx" unique="false">
            <column name="appid" />
        </createIndex>
        <createIndex tableName="application_perspective_location_map" indexName="monitoringlocationid_idx" unique="false">
            <column name="monitoringlocationid" />
        </createIndex>
        <createIndex tableName="application_perspective_location_map" indexName="appid_monitoringlocationid_idx" unique="true">
            <column name="appid" />
            <column name="monitoringlocationid" />
        </createIndex>

        <dropTable tableName="monitoringlocationspollingpackages"/>
        <dropTable tableName="monitoringlocationscollectionpackages"/>
    </changeSet>
    
    <changeSet author="cpape" id="27.0.0-remove-scanreports">
        <dropTable tableName="scanreportlogs"/>
        <dropTable tableName="scanreportpollresults"/>
        <dropTable tableName="scanreportproperties"/>
        <dropTable tableName="scanreports"/>
    </changeSet>

    <changeSet runOnChange="false" author="cgorantla" id="27.0.0-bmpcollectornxtid">
      <preConditions onFail="MARK_RAN">
        <sqlCheck expectedResult="0">
          SELECT COUNT(relname) AS SEQUENCE_NAME FROM pg_class, pg_namespace
          WHERE relkind='S' AND pg_class.relnamespace = pg_namespace.oid AND relname ILIKE 'bmpcollectornxtid'
        </sqlCheck>
      </preConditions>
      <createSequence sequenceName="bmpcollectornxtid" />
      <rollback>
        <dropSequence sequenceName="bmpcollectornxtid" />
      </rollback>
    </changeSet>

    <changeSet author="cgorantla" id="27.0.0-bmp-collector">

      <createTable tableName="bmp_collectors" remarks="bmp collectors">
        <column name="id" type="bigint">
          <constraints nullable="false" primaryKey="true"/>
        </column>
        <column name="hash_id" type="varchar(36)">
          <constraints nullable="false"/>
        </column>
        <!-- Represents state Up/Down, default is Down -->
        <column name="state" type="boolean" defaultValue="false">
          <constraints nullable="false"/>
        </column>
        <column name="admin_id" type="varchar(64)">
          <constraints nullable="false" />
        </column>
        <column name="routers" type="varchar(4096)"/>
        <column name="routers_count" type="smallint" defaultValue="0">
          <constraints nullable="false" />
        </column>
        <column name="last_updated" type="timestamp">
          <constraints nullable="false" />
        </column>
        <column name="name" type="varchar(200)"/>
        <column name="ip_address" type="varchar(40)"/>
      </createTable>
    </changeSet>

  <changeSet runOnChange="false" author="cgorantla" id="27.0.0-bmprouternxtid">
    <preConditions onFail="MARK_RAN">
      <sqlCheck expectedResult="0">
        SELECT COUNT(relname) AS SEQUENCE_NAME FROM pg_class, pg_namespace
        WHERE relkind='S' AND pg_class.relnamespace = pg_namespace.oid AND relname ILIKE 'bmprouternxtid'
      </sqlCheck>
    </preConditions>
    <createSequence sequenceName="bmprouternxtid" />
    <rollback>
      <dropSequence sequenceName="bmprouternxtid" />
    </rollback>
  </changeSet>

    <changeSet  author="cgorantla" id="27.0.0-bmp-router">

      <createTable tableName="bmp_routers" remarks="bmp routers">
        <column name="id" type="bigint">
          <constraints nullable="false" primaryKey="true"/>
        </column>
        <column name="hash_id" type="varchar(36)">
          <constraints nullable="false"/>
        </column>
        <column name="name" type="varchar(200)">
          <constraints nullable="false" />
        </column>
        <column name="ip_address" type="varchar(40)">
          <constraints nullable="false" />
        </column>
        <column name="router_as" type="bigint"/>
        <column name="last_updated" type="timestamp">
          <constraints nullable="false" />
        </column>
        <column name="description" type="varchar(255)"/>
        <!-- Represents state Up/Down, default is Down -->
        <column name="state" type="boolean" defaultValue="false"/>
        <column name="is_passive" type="boolean" defaultValue="false"/>
        <column name="term_reason_code" type="int"/>
        <column name="term_reason_text" type="varchar(255)"/>
        <column name="term_data" type="text"/>
        <column name="init_data" type="text"/>
        <column name="geo_ip_start" type="varchar(40)"/>
        <column name="collector_hash_id" type="varchar(36)">
          <constraints nullable="false" />
        </column>
        <column name="bgp_id" type="varchar(40)"/>
        <column name="connection_count" type="int" defaultValue="0"/>
      </createTable>
    </changeSet>

  <changeSet runOnChange="false" author="cgorantla" id="27.0.0-bmppeernxtid">
    <preConditions onFail="MARK_RAN">
      <sqlCheck expectedResult="0">
        SELECT COUNT(relname) AS SEQUENCE_NAME FROM pg_class, pg_namespace
        WHERE relkind='S' AND pg_class.relnamespace = pg_namespace.oid AND relname ILIKE 'bmppeernxtid'
      </sqlCheck>
    </preConditions>
    <createSequence sequenceName="bmppeernxtid" />
    <rollback>
      <dropSequence sequenceName="bmppeernxtid" />
    </rollback>
  </changeSet>

  <changeSet  author="cgorantla" id="27.0.0-bmp-peers">

    <createTable tableName="bmp_peers" remarks="bmp peers">
      <column name="id" type="bigint">
        <constraints nullable="false" primaryKey="true"/>
      </column>
      <column name="hash_id" type="varchar(36)">
        <constraints nullable="false"/>
      </column>
      <column name="router_hash_id" type="varchar(36)">
        <constraints nullable="false" />
      </column>
      <column name="peer_rd" type="varchar(32)">
        <constraints nullable="false" />
      </column>
      <column name="is_ipv4" type="boolean" defaultValue="true">
        <constraints nullable="false" />
      </column>
      <column name="peer_addr" type="varchar(40)">
        <constraints nullable="false" />
      </column>
      <column name="name" type="varchar(200)"/>
      <column name="peer_bgp_id" type="varchar(40)"/>
      <column name="state" type="boolean" defaultValue="false">
        <constraints nullable="false" />
      </column>
      <column name="is_l3vpn_peer" type="boolean" defaultValue="false">
        <constraints nullable="false" />
      </column>
      <column name="last_updated" type="timestamp">
        <constraints nullable="false" />
      </column>
      <column name="is_pre_policy" type="boolean" defaultValue="true">
        <constraints nullable="false" />
      </column>
      <column name="geo_ip_start" type="varchar(40)"/>
      <column name="local_ip" type="varchar(40)"/>
      <column name="local_bgp_id" type="varchar(40)"/>
      <column name="local_port" type="int"/>
      <column name="local_hold_time" type="bigint"/>
      <column name="local_asn" type="bigint"/>
      <column name="remote_port" type="int"/>
      <column name="remote_hold_time" type="bigint"/>
      <column name="sent_capabilities" type="varchar(4096)"/>
      <column name="recv_capabilities" type="varchar(4096)"/>
      <column name="bmp_reason" type="smallint"/>
      <column name="bgp_err_code" type="smallint"/>
      <column name="error_text" type="varchar(255)"/>
      <column name="is_loc_rib" type="boolean" defaultValue="false">
        <constraints nullable="false" />
      </column>
      <column name="is_loc_rib_filtered" type="boolean" defaultValue="false">
        <constraints nullable="false" />
      </column>
      <column name="table_name" type="varchar(255)"/>
    </createTable>
  </changeSet>

  <changeSet runOnChange="false" author="cgorantla" id="27.0.0-bmp-baseattrsnxtid">
    <preConditions onFail="MARK_RAN">
      <sqlCheck expectedResult="0">
        SELECT COUNT(relname) AS SEQUENCE_NAME FROM pg_class, pg_namespace
        WHERE relkind='S' AND pg_class.relnamespace = pg_namespace.oid AND relname ILIKE 'baseattrsnxtid'
      </sqlCheck>
    </preConditions>
    <createSequence sequenceName="baseattrsnxtid" />
    <rollback>
      <dropSequence sequenceName="baseattrsnxtid" />
    </rollback>
  </changeSet>

  <changeSet  author="cgorantla" id="27.0.0-bmp-baseattrs">

    <createTable tableName="bmp_base_attributes" remarks="bmp base attributes">
      <column name="id" type="bigint">
        <constraints nullable="false" primaryKey="true"/>
      </column>
      <column name="hash_id" type="varchar(36)">
        <constraints nullable="false"/>
      </column>
      <column name="peer_hash_id" type="varchar(36)">
        <constraints nullable="false" />
      </column>
      <column name="origin" type="varchar(16)">
        <constraints nullable="false" />
      </column>
      <column name="as_path" type="varchar(8192)">
        <constraints nullable="false" />
      </column>
      <column name="as_path_count" type="smallint" defaultValue="0"/>
      <column name="origin_as" type="bigint"/>
      <column name="next_hop" type="varchar(40)"/>
      <column name="med" type="bigint"/>
      <column name="local_pref" type="bigint"/>

      <column name="aggregator" type="varchar(64)"/>
      <column name="community_list" type="varchar(6000)"/>
      <column name="ext_community_list" type="varchar(2048)"/>
      <column name="large_community_list" type="varchar(3000)"/>
      <column name="cluster_list" type="varchar(2048)"/>
      <column name="is_atomic_agg" type="boolean" defaultValue="false"/>
      <column name="is_nexthop_ipv4" type="boolean" defaultValue="true"/>
      <column name="last_updated" type="timestamp">
        <constraints nullable="false" />
      </column>
      <column name="originator_id" type="varchar(40)"/>
    </createTable>
  </changeSet>

  <changeSet runOnChange="false" author="cgorantla" id="27.0.0-bmp-unicastsequence">
    <preConditions onFail="MARK_RAN">
      <sqlCheck expectedResult="0">
        SELECT COUNT(relname) AS SEQUENCE_NAME FROM pg_class, pg_namespace
        WHERE relkind='S' AND pg_class.relnamespace = pg_namespace.oid AND relname ILIKE 'bmpunicastnxtid'
      </sqlCheck>
    </preConditions>
    <createSequence sequenceName="bmpunicastnxtid" />
    <rollback>
      <dropSequence sequenceName="bmpunicastnxtid" />
    </rollback>
  </changeSet>

  <changeSet  author="cgorantla" id="27.0.0-bmp-unicast">

    <createTable tableName="bmp_ip_ribs" remarks="bmp unicast prefixes ">
      <column name="id" type="bigint">
        <constraints nullable="false" primaryKey="true"/>
      </column>
      <column name="hash_id" type="varchar(36)">
        <constraints nullable="false"/>
      </column>
      <column name="peer_hash_id" type="varchar(36)">
        <constraints nullable="false" />
      </column>
      <column name="base_attr_hash_id" type="varchar(36)">
        <constraints nullable="false" />
      </column>
      <column name="is_ipv4" type="boolean">
        <constraints nullable="false" />
      </column>
      <column name="origin_as" type="bigint"/>
      <column name="prefix" type="varchar(40)">
        <constraints nullable="false" />
      </column>
      <column name="prefix_len" type="smallint">
        <constraints nullable="false" />
      </column>
      <column name="last_updated" type="timestamp">
        <constraints nullable="false" />
      </column>
      <column name="first_added_timestamp" type="timestamp">
        <constraints nullable="false" />
      </column>
      <column name="is_withdrawn" type="boolean" defaultValue="false">
        <constraints nullable="false" />
      </column>
      <column name="prefix_bits" type="varchar(128)"/>
      <column name="path_id" type="bigint"/>
      <column name="labels" type="varchar(255)"/>
      <column name="is_pre_policy" type="boolean" defaultValue="true">
        <constraints nullable="false" />
      </column>
      <column name="is_adj_ribin" type="boolean" defaultValue="true">
        <constraints nullable="false" />
      </column>
    </createTable>
  </changeSet>


  <changeSet runOnChange="false" author="cgorantla" id="27.0.0-global-ip-ribs-nxtid">
    <preConditions onFail="MARK_RAN">
      <sqlCheck expectedResult="0">
        SELECT COUNT(relname) AS SEQUENCE_NAME FROM pg_class, pg_namespace
        WHERE relkind='S' AND pg_class.relnamespace = pg_namespace.oid AND relname ILIKE 'bmpglobalipribsnxtid'
      </sqlCheck>
    </preConditions>
    <createSequence sequenceName="bmpglobalipribsnxtid" />
    <rollback>
      <dropSequence sequenceName="bmpglobalipribsnxtid" />
    </rollback>
  </changeSet>

  <changeSet  author="cgorantla" id="27.0.0-global-ip-ribs">

    <createTable tableName="bmp_global_ip_ribs" remarks="bmp global ip ribs">
      <column name="id" type="bigint">
        <constraints nullable="false"/>
      </column>
      <column name="prefix" type="varchar(40)">
        <constraints nullable="false"/>
      </column>
      <column name="should_delete" type="boolean" defaultValue="false">
        <constraints nullable="false"/>
      </column>
      <column name="prefix_len" type="int">
        <constraints nullable="false"/>
      </column>
      <column name="recv_origin_as" type="bigint">
        <constraints nullable="false"/>
      </column>
      <column name="rpki_origin_as" type="bigint"/>
      <column name="irr_origin_as" type="bigint"/>
      <column name="irr_source" type="varchar(32)"/>
      <column name="last_updated" type="timestamp">
        <constraints nullable="false" />
      </column>
      <column name="num_peers" type="int" defaultValue="0"/>
    </createTable>
    <addPrimaryKey tableName="bmp_global_ip_ribs" constraintName="pk_bmp_global_ip_ribs" columnNames="prefix,recv_origin_as"/>
  </changeSet>


</databaseChangeLog>
